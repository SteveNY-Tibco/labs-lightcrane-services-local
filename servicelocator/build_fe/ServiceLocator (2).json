{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/tablemutate",
        "log_1 github.com/project-flogo/contrib/activity/log",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/tablequery",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/mapping",
        "github.com/TIBCOSoftware/ModelOps/activity/httpclient",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/jsondeserializer",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "github.com/TIBCOSoftware/ModelOps/trigger/httpredirect",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "github.com/TIBCOSoftware/F1_Function/functions/f1"
    ],
    "name": "ServiceLocator",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.9.0",
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 10080,
                "APISpecUpdate": false,
                "swagger": "",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "Path": "/f1/locator/register/{service}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:RegisterService"
                        },
                        "input": {
                            "ID": "=$.body.ID",
                            "URL": "=$.body.URL",
                            "Type": "=$.pathParams.service",
                            "Properties": "=$.body.Properties",
                            "Location": "=$.body.Location"
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "Response": "=$.Response"
                                }
                            },
                            "code": 200
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}",
                                "fe_metadata": "{\n    \"Response\" : {\n    \"ID\" : \"\",\n    \"Type\" : \"\",\n    \"Location\" : \"\",\n    \"URL\" : \"\",\n    \"Properties\" : {}\n}\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"service\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"service\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                "fe_metadata": "{\n    \"ID\" : \"\",\n    \"Location\" : \"\",\n    \"URL\" : \"\",\n    \"Properties\" : {}\n}"
                            }
                        }
                    },
                    "name": "RegisterService"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "Path": "/f1/locator/unregister/{service}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:UnregisterService"
                        },
                        "input": {
                            "ID": "=$.body.ID",
                            "Type": "=$.pathParams.service"
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "Response": {
                                        "ID": "=$.Response.ID",
                                        "Type": "=$.Response.Type"
                                    }
                                }
                            },
                            "code": 200
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}}",
                                "fe_metadata": "{\n    \"Response\" : {\n    \"ID\" : \"\",\n    \"Type\" : \"\"\n    }\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"service\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"service\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"ID\" : \"\"\n}"
                            }
                        }
                    },
                    "name": "UnregisterService"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "GET",
                        "Path": "/f1/locator/list/{service}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ListServices"
                        },
                        "input": {
                            "Type": "=$.pathParams.service"
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "Response": "=$.Response"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "{\n    \"Response\" : [{\n    \"ID\" : \"\",\n    \"Type\" : \"\"\n}]\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"service\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"service\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "ListServices"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "GET",
                        "Path": "/f1/locator/locate/{ServiceType}/{serviceID}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:LocateService"
                        },
                        "input": {
                            "ServiceID": "=$.pathParams.serviceID",
                            "ServiceType": "=$.pathParams.ServiceType"
                        },
                        "output": {
                            "data": "=$.Response"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                "fe_metadata": "{\n    \"ID\": \"\",\n    \"Type\": \"\",\n    \"URL\": \"\",\n    \"Properties\": {}\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"},\"serviceID\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"ServiceType\",\"type\":\"string\"},{\"parameterName\":\"serviceID\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "LocateService"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "GET",
                        "Path": "/f1/metadata/{name}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:GetMetadata"
                        },
                        "input": {
                            "Name": "=$.pathParams.name"
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "Value": "=$.Value",
                                    "Name": "=$.Name"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Value\":{\"type\":\"object\",\"properties\":{}}}}",
                                "fe_metadata": "{\n    \"Name\" : \"\",\n    \"Value\" : {}\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"name\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "GetMetadata"
                },
                {
                    "description": "",
                    "settings": {
                        "Method": "GET",
                        "Path": "/f1/locator/list/{location}/{service}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ListServicesDetailsByLocation"
                        },
                        "input": {
                            "Type": "=$.pathParams.service",
                            "Location": "=$.pathParams.location"
                        },
                        "output": {
                            "code": 200,
                            "data": {
                                "mapping": {
                                    "Response": "=$.Response"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"Response\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Type\": {\n                        \"type\": \"string\"\n                    },\n                    \"Location\": {\n                        \"type\": \"string\"\n                    },\n                    \"URL\": {\n                        \"type\": \"string\"\n                    },\n                    \"Properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {}\n                    }\n                }\n            }\n        }\n    }\n}",
                                "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"Response\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Type\": {\n                        \"type\": \"string\"\n                    },\n                    \"Location\": {\n                        \"type\": \"string\"\n                    },\n                    \"URL\": {\n                        \"type\": \"string\"\n                    },\n                    \"Properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {}\n                    }\n                }\n            }\n        }\n    }\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"location\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"location\",\"type\":\"string\"},{\"parameterName\":\"service\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "ListServicesDetailsByLocation"
                }
            ]
        },
        {
            "ref": "#httpredirect",
            "name": "httpredirect",
            "description": "This trigger redirects HTTP request",
            "settings": {
                "Port": "10081"
            },
            "id": "HTTPRedirect",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Path": "/"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:HTTPRedirect"
                        },
                        "input": {
                            "RequestURL": "=$.RequestURL"
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "RedirectURL": "=$.RedirectURL"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"RedirectURL\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"RedirectURL\" : \"\"\n}"
                            }
                        }
                    },
                    "name": "HTTPRedirect"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:RegisterService",
            "data": {
                "name": "RegisterService",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogRegisterService",
                        "to": "TableMutate",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "TableMutate",
                        "to": "Log",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogRegisterService",
                        "name": "LogRegisterService",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ Register Service ^^^^^^ ID : \", $flow.ID, \", Type : \", $flow.Type, \"Location : \", $flow.Location, \"URL : \", $flow.URL, \", Properties : \", string.tostring($flow.Properties))"
                            }
                        }
                    },
                    {
                        "id": "TableMutate",
                        "name": "TableMutate",
                        "description": "A simple activity for upserting/deleting data to/from table",
                        "activity": {
                            "ref": "#tablemutate",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Method": "upsert"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ServiceID": "=$flow.ID",
                                        "ServiceType": "=$flow.Type",
                                        "LocationID": "=$flow.Location",
                                        "URL": "=$flow.URL",
                                        "Properties": "=$flow.Properties"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"New\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}},\"Old\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}",
                                        "fe_metadata": "{\"New\":{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}},\"Old\":{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log_1",
                            "input": {
                                "message": "=string.tostring($activity[TableMutate].Data)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": {
                                        "mapping": {
                                            "ID": "=$activity[TableMutate].Data.New.ServiceID",
                                            "Type": "=$activity[TableMutate].Data.New.ServiceType",
                                            "URL": "=$activity[TableMutate].Data.New.URL",
                                            "Properties": "=$activity[TableMutate].Data.New.Properties",
                                            "Location": "=$activity[TableMutate].Data.New.LocationID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "ID",
                            "type": "string"
                        },
                        {
                            "name": "Type",
                            "type": "string"
                        },
                        {
                            "name": "Location",
                            "type": "string"
                        },
                        {
                            "name": "URL",
                            "type": "string"
                        },
                        {
                            "name": "Properties",
                            "type": "object"
                        }
                    ],
                    "output": [
                        {
                            "name": "Response",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:UnregisterService",
            "data": {
                "name": "UnregisterService",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogUnregisterService",
                        "to": "TableMutate",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "TableMutate",
                        "to": "Return",
                        "type": "expression",
                        "label": "TableMutatetoReturn",
                        "value": "$activity[TableMutate].Exists"
                    },
                    {
                        "id": 3,
                        "from": "TableMutate",
                        "to": "NotFound",
                        "type": "exprOtherwise",
                        "label": "TableMutatetoReturn1"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogUnregisterService",
                        "name": "LogUnregisterService",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ Unregister Service ^^^^^^ ID : \", $flow.ID, \", Type : \", $flow.Type, \", Location : \", $flow.Location)"
                            }
                        }
                    },
                    {
                        "id": "TableMutate",
                        "name": "TableMutate",
                        "description": "A simple activity for upserting/deleting data to/from table",
                        "activity": {
                            "ref": "#tablemutate",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Method": "delete"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ServiceID": "=$flow.ID",
                                        "ServiceType": "=$flow.Type",
                                        "LocationID": "=$flow.Location"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"New\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}},\"Old\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}",
                                        "fe_metadata": "{\"New\":{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}},\"Old\":{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": {
                                        "mapping": {
                                            "ID": "=$activity[TableMutate].Data.Old.ServiceID",
                                            "Type": "=$activity[TableMutate].Data.Old.ServiceType",
                                            "Location": "=$activity[TableMutate].Data.Old.LocationID"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "NotFound",
                        "name": "NotFound",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "ID",
                            "type": "string"
                        },
                        {
                            "name": "Type",
                            "type": "string"
                        },
                        {
                            "name": "Location",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "Response",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:ListServices",
            "data": {
                "name": "ListServices",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogListServices",
                        "to": "TableQuery",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "TableQuery",
                        "to": "LogQueryResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogQueryResult",
                        "to": "Mapping",
                        "type": "expression",
                        "label": "LogQueryResulttoMapping",
                        "value": "0!=array.count($activity[TableQuery].Data)"
                    },
                    {
                        "id": 4,
                        "from": "Mapping",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogQueryResult",
                        "to": "Return_Nothing",
                        "type": "exprOtherwise",
                        "label": "LogQueryResulttoReturn_Nothing"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogListServices",
                        "name": "LogListServices",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ List Services ^^^^^^  Type : \", $flow.Type)"
                            }
                        }
                    },
                    {
                        "id": "TableQuery",
                        "name": "TableQuery",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Indices": "ServiceType"
                            },
                            "input": {
                                "QueryKey": {
                                    "mapping": {
                                        "ServiceType": "=$flow.Type"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogQueryResult",
                        "name": "LogQueryResult",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ Query Result ^^^^^^ TableQuery.Data : \", string.tostring($activity[TableQuery].Data))"
                            }
                        }
                    },
                    {
                        "id": "Mapping",
                        "name": "Mapping",
                        "description": "Mapping field from input to output",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[TableQuery].Data",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": true,
                                "MappingFields": "[{\"Name\":\"ID\",\"Type\":\"String\"},{\"Name\":\"Type\",\"Type\":\"String\"},{\"Name\":\"Location\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ArraySize": "=array.count($activity[TableQuery].Data)",
                                        "SkipCondition": "=boolean.false()",
                                        "Type": "=$iteration[value].ServiceType",
                                        "ID": "=$iteration[value].ServiceID",
                                        "Location": "=$iteration[value].LocationID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"SkipCondition\":{\"type\":\"boolean\"},\"ArraySize\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"ID\":\"2\",\"Type\":\"2\",\"Location\":\"2\",\"SkipCondition\":false,\"ArraySize\":2}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"ID\":\"2\",\"Type\":\"2\",\"Location\":\"2\"}]"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"ID\",\"Type\":\"String\"},{\"Name\":\"Type\",\"Type\":\"String\"},{\"Name\":\"Location\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": "=$activity[Mapping].Data"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return_Nothing",
                        "name": "Return_Nothing",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": {
                                        "mapping": []
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "Type",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "Response",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Type\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}}}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:ListServicesDetailsByLocation",
            "data": {
                "name": "ListServicesDetailsByLocation",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogListServices",
                        "to": "TableQuery",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "TableQuery",
                        "to": "LogQueryResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogQueryResult",
                        "to": "Mapping",
                        "type": "expression",
                        "label": "LogQueryResulttoMapping",
                        "value": "0!=array.count($activity[TableQuery].Data)"
                    },
                    {
                        "id": 4,
                        "from": "Mapping",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogQueryResult",
                        "to": "Return_Nothing",
                        "type": "exprOtherwise",
                        "label": "LogQueryResult to Return_Nothing"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogListServices",
                        "name": "LogListServices",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ List Services ^^^^^^  Location : \", $flow.Location, \", Type : \", $flow.Type)"
                            }
                        }
                    },
                    {
                        "id": "TableQuery",
                        "name": "TableQuery",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Indices": "ServiceType LocationID"
                            },
                            "input": {
                                "QueryKey": {
                                    "mapping": {
                                        "ServiceType": "=$flow.Type",
                                        "LocationID": "=$flow.Location"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\",\"LocationID\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogQueryResult",
                        "name": "LogQueryResult",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ Query Result ^^^^^^ TableQuery.Data : \", string.tostring($activity[TableQuery].Data))"
                            }
                        }
                    },
                    {
                        "id": "Mapping",
                        "name": "Mapping",
                        "description": "Mapping field from input to output",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[TableQuery].Data",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": true,
                                "MappingFields": "[{\"Name\":\"ID\",\"Type\":\"String\"},{\"Name\":\"Type\",\"Type\":\"String\"},{\"Name\":\"Location\",\"Type\":\"String\"},{\"Name\":\"URL\",\"Type\":\"String\"},{\"Name\":\"Properties\",\"Type\":\"Object\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ArraySize": "=array.count($activity[TableQuery].Data)",
                                        "SkipCondition": "=boolean.false()",
                                        "Type": "=$iteration[value].ServiceType",
                                        "ID": "=$iteration[value].ServiceID",
                                        "Location": "=$iteration[value].LocationID",
                                        "URL": "=$iteration[value].URL",
                                        "Properties": "=$iteration[value].Properties"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}},\"SkipCondition\":{\"type\":\"boolean\"},\"ArraySize\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"ID\":\"2\",\"Type\":\"2\",\"Location\":\"2\",\"URL\":\"2\",\"Properties\":{},\"SkipCondition\":false,\"ArraySize\":2}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ID\":\"2\",\"Type\":\"2\",\"Location\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"ID\",\"Type\":\"String\"},{\"Name\":\"Type\",\"Type\":\"String\"},{\"Name\":\"Location\",\"Type\":\"String\"},{\"Name\":\"URL\",\"Type\":\"String\"},{\"Name\":\"Properties\",\"Type\":\"Object\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": "=$activity[Mapping].Data"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return_Nothing",
                        "name": "Return_Nothing",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": {
                                        "mapping": []
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "Type",
                            "type": "string"
                        },
                        {
                            "name": "Location",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "Response",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:LocateService",
            "data": {
                "name": "LocateService",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogLocateService",
                        "to": "FindServiceInLocator",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "FindServiceInLocator",
                        "to": "LogServiceFound",
                        "type": "expression",
                        "label": "TableQuerytoReturn",
                        "value": "$activity[FindServiceInLocator].Exists"
                    },
                    {
                        "id": 3,
                        "from": "LogServiceFound",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "FindServiceInLocator",
                        "to": "LogServiceNotFound",
                        "type": "exprOtherwise",
                        "label": "TableQuerytoReturn1"
                    },
                    {
                        "id": 5,
                        "from": "LogServiceNotFound",
                        "to": "LogDeligateToDeployer",
                        "type": "expression",
                        "label": "LogServiceNotFoundtoLogDeligateToDeployer",
                        "value": "\"agent\"!=$flow.ServiceType&&\"deployer\"!=$flow.ServiceType&&\"builder\"!=$flow.ServiceType&&\"locator\"!=$flow.ServiceType&&\"projectmgr\"!=$flow.ServiceType"
                    },
                    {
                        "id": 6,
                        "from": "LogDeligateToDeployer",
                        "to": "FindDeployer",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "FindDeployer",
                        "to": "FindEndpoint",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "FindEndpoint",
                        "to": "ResponseFromDeployer",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "ResponseFromDeployer",
                        "to": "SaveServiceInfo",
                        "type": "expression",
                        "label": "JSONDeserializertoReturnFromDeployer",
                        "value": "$activity[FindEndpoint].Success&&null!=$activity[ResponseFromDeployer].Data.ID"
                    },
                    {
                        "id": 10,
                        "from": "SaveServiceInfo",
                        "to": "ReturnFromDeployer",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "ResponseFromDeployer",
                        "to": "NotFoundFromDeployer",
                        "type": "exprOtherwise",
                        "label": "ResponseFromDeployer to NotFoundFromDeployer"
                    },
                    {
                        "id": 12,
                        "from": "LogServiceNotFound",
                        "to": "ReturnNothing",
                        "type": "exprOtherwise",
                        "label": "LogServiceNotFound to ReturnNothing"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogLocateService",
                        "name": "LogLocateService",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ LocateService ^^^^^^ ServiceType : \", $flow.ServiceType, \", ServiceID : \", $flow.ServiceID)"
                            }
                        }
                    },
                    {
                        "id": "FindServiceInLocator",
                        "name": "FindServiceInLocator",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Indices": "ServiceID ServiceType"
                            },
                            "input": {
                                "QueryKey": {
                                    "mapping": {
                                        "ServiceID": "=$flow.ServiceID",
                                        "ServiceType": "=$flow.ServiceType"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceID\":\"2\",\"ServiceType\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogServiceFound",
                        "name": "LogServiceFound",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ ServiceFound ^^^^^^ ServiceID : \", $flow.ServiceID)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": {
                                        "mapping": {
                                            "ID": "=$activity[FindServiceInLocator].Data[0].ServiceID",
                                            "Type": "=$activity[FindServiceInLocator].Data[0].ServiceType",
                                            "URL": "=$activity[FindServiceInLocator].Data[0].URL",
                                            "Properties": "=$activity[FindServiceInLocator].Data[0].Properties",
                                            "Location": "=$activity[FindServiceInLocator].Data[0].LocationID"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogServiceNotFound",
                        "name": "LogServiceNotFound",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ Service Not Found ^^^^^^ ServiceID : \", $flow.ServiceID)"
                            }
                        }
                    },
                    {
                        "id": "LogDeligateToDeployer",
                        "name": "LogDeligateToDeployer",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ DeligateToDeployer ^^^^^^ ServiceType : \", $flow.ServiceType)"
                            }
                        }
                    },
                    {
                        "id": "FindDeployer",
                        "name": "FindDeployer",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Indices": "ServiceType"
                            },
                            "input": {
                                "QueryKey": {
                                    "mapping": {
                                        "ServiceType": "deployer"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"Plateform\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"Plateform\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "FindEndpoint",
                        "name": "FindEndpoint",
                        "description": "This activity build docker image from Dockerfile",
                        "activity": {
                            "ref": "#httpclient",
                            "settings": {
                                "method": "GET",
                                "timeout": "1000",
                                "leftToken": "$",
                                "rightToken": "$",
                                "variablesDef": "[{\"Name\":\"ServiceID\",\"Type\":\"String\"}]",
                                "httpHeaders": ""
                            },
                            "input": {
                                "URL": "http://deployer:10082/f1/deployer/endpoint/$ServiceID$",
                                "Body": "",
                                "SkipCondition": false,
                                "Variables": {
                                    "mapping": {
                                        "ServiceID": "=$flow.ServiceID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Variables": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceID\":\"2\"}"
                                    }
                                },
                                "settings": {
                                    "variablesDef": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"Name\":\"ServiceID\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ResponseFromDeployer",
                        "name": "ResponseFromDeployer",
                        "description": "JSON Deserializer Activity",
                        "activity": {
                            "ref": "#jsondeserializer",
                            "settings": {
                                "schemaFromfile": false,
                                "sample": "",
                                "dataSample": {
                                    "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                    "value": "",
                                    "fe_metadata": "{\n    \"ID\": \"\",\n    \"Type\": \"\",\n    \"URL\": \"\",\n    \"Properties\": {}\n}"
                                },
                                "defaultValue": ""
                            },
                            "input": {
                                "JSONString": "=$activity[FindEndpoint].Data"
                            },
                            "schemas": {
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"ID\":\"\",\"Type\":\"\",\"URL\":\"\",\"Properties\":{}}"
                                    }
                                },
                                "settings": {
                                    "dataSample": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\n    \"ID\": \"\",\n    \"Type\": \"\",\n    \"URL\": \"\",\n    \"Properties\": {}\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SaveServiceInfo",
                        "name": "SaveServiceInfo",
                        "description": "A simple activity for upserting/deleting data to/from table",
                        "activity": {
                            "ref": "#tablemutate",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Method": "upsert"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ServiceID": "=$activity[ResponseFromDeployer].Data.ID",
                                        "ServiceType": "=$activity[ResponseFromDeployer].Data.Type",
                                        "URL": "=$activity[ResponseFromDeployer].Data.URL",
                                        "Properties": "=$activity[ResponseFromDeployer].Data.Properties"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"New\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}},\"Old\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"LocationID\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}",
                                        "fe_metadata": "{\"New\":{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}},\"Old\":{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"LocationID\":\"2\",\"URL\":\"2\",\"Properties\":{}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ReturnFromDeployer",
                        "name": "ReturnFromDeployer",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": {
                                        "mapping": {
                                            "ID": "=$activity[SaveServiceInfo].Data.New.ServiceID",
                                            "Type": "=$activity[SaveServiceInfo].Data.New.ServiceType",
                                            "URL": "=$activity[SaveServiceInfo].Data.New.URL",
                                            "Properties": "=$activity[SaveServiceInfo].Data.New.Properties",
                                            "Location": "=$activity[SaveServiceInfo].Data.New.LocationID"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "NotFoundFromDeployer",
                        "name": "NotFoundFromDeployer",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": "=$activity[ResponseFromDeployer].Data"
                                }
                            }
                        }
                    },
                    {
                        "id": "ReturnNothing",
                        "name": "ReturnNothing",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Response": "=f1.json2object(\"{}\")"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "ServiceType",
                            "type": "string"
                        },
                        {
                            "name": "ServiceID",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "Response",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"},\"ServiceID\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Response\":{\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Location\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:HTTPRedirect",
            "data": {
                "name": "HTTPRedirect",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "GetServiceType",
                        "to": "Log",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Log",
                        "to": "TableQuery",
                        "type": "expression",
                        "label": "LogtoMapping",
                        "value": "\"ingerence\"!=$activity[GetServiceType].Data.ServiceType"
                    },
                    {
                        "id": 3,
                        "from": "TableQuery",
                        "to": "PrintURL01",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "PrintURL01",
                        "to": "Return01",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Log",
                        "to": "AccessByID",
                        "type": "expression",
                        "label": "LogtoAccessByID",
                        "value": "\"ingerence\"!=$activity[GetServiceType].Data.ServiceType"
                    },
                    {
                        "id": 6,
                        "from": "AccessByID",
                        "to": "QueryByTypeNdID",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "QueryByTypeNdID",
                        "to": "PrintURL02",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "PrintURL02",
                        "to": "Return02",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "GetServiceType",
                        "name": "GetServiceType",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"ServiceType\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ServiceType": "=array.get(string.split($flow.RequestURL, \"/\"), 2)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"},\"SkipCondition\":{\"type\":\"boolean\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\",\"SkipCondition\":false}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\"}"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"Name\":\"ServiceType\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log_1",
                            "input": {
                                "message": "=$flow.RequestURL",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "TableQuery",
                        "name": "TableQuery",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Indices": "ServiceType"
                            },
                            "input": {
                                "QueryKey": {
                                    "mapping": {
                                        "ServiceType": "=$activity[GetServiceType].Data.ServiceType"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"Plateform\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"Plateform\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PrintURL01",
                        "name": "PrintURL01",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log_1",
                            "input": {
                                "message": "=$activity[TableQuery].Data[0].URL",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return01",
                        "name": "Return01",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "RedirectURL": "=$activity[TableQuery].Data[0].URL+string.substringAfter($flow.RequestURL, $activity[GetServiceType].Data.ServiceType)"
                                }
                            }
                        }
                    },
                    {
                        "id": "AccessByID",
                        "name": "AccessByID",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"ServiceType\",\"Type\":\"String\"},{\"Name\":\"ServiceID\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "ServiceType": "=array.get(string.split($flow.RequestURL, \"/\"), 2)",
                                        "ServiceID": "=array.get(string.split($flow.RequestURL, \"/\"), 3)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"},\"ServiceID\":{\"type\":\"string\"},\"SkipCondition\":{\"type\":\"boolean\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\",\"ServiceID\":\"2\",\"SkipCondition\":false}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceType\":{\"type\":\"string\"},\"ServiceID\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceType\":\"2\",\"ServiceID\":\"2\"}"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"ServiceType\",\"Type\":\"String\"},{\"Name\":\"ServiceID\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "QueryByTypeNdID",
                        "name": "QueryByTypeNdID",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c6215040-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Services"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"ServiceID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"ServiceType\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"LocationID\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"URL\",\"Type\":\"String\",\"IsKey\":\"no\",\"Indexed\":\"no\"},{\"Name\":\"Properties\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1637691762447,
                                    "user": "flogo",
                                    "connectorName": "Services",
                                    "connectorDescription": " "
                                },
                                "Indices": "ServiceID ServiceType"
                            },
                            "input": {
                                "QueryKey": {
                                    "mapping": {
                                        "ServiceType": "=$activity[AccessByID].Data.ServiceType",
                                        "ServiceID": "=$activity[AccessByID].Data.ServiceID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"ServiceID\":\"2\",\"ServiceType\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"ServiceID\":{\"type\":\"string\"},\"ServiceType\":{\"type\":\"string\"},\"Plateform\":{\"type\":\"string\"},\"URL\":{\"type\":\"string\"},\"Properties\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "[{\"ServiceID\":\"2\",\"ServiceType\":\"2\",\"Plateform\":\"2\",\"URL\":\"2\",\"Properties\":{}}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PrintURL02",
                        "name": "PrintURL02",
                        "description": "Logs a message",
                        "activity": {
                            "ref": "#log_1",
                            "input": {
                                "message": "=$activity[QueryByTypeNdID].Data[0].URL",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return02",
                        "name": "Return02",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "RedirectURL": "=$activity[QueryByTypeNdID].Data[0].URL"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "RequestURL",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "RedirectURL",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"RequestURL\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"RedirectURL\":{\"type\":\"string\"}}}"
                    }
                }
            }
        },
        {
            "id": "flow:GetMetadata",
            "data": {
                "name": "GetMetadata",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogGetMetadata",
                        "to": "TableQuery",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "TableQuery",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogGetMetadata",
                        "name": "LogGetMetadata",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"^^^^^^ Get Metadata ^^^^^^ Name : \", $flow.Name)"
                            }
                        }
                    },
                    {
                        "id": "TableQuery",
                        "name": "TableQuery",
                        "description": "A simple activity for quering data from table",
                        "activity": {
                            "ref": "#tablequery",
                            "settings": {
                                "Table": {
                                    "id": "c62065e0-4aff-11eb-9ffb-8db6499bd1d7",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_Tools/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "Metadata"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"Name\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"Value\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1609374835534,
                                    "user": "flogo",
                                    "connectorName": "Metadata",
                                    "connectorDescription": " "
                                },
                                "Indices": "Name"
                            },
                            "schemas": {
                                "input": {
                                    "QueryKey": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"Name\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Value\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"Name\":\"2\",\"Value\":{}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "Name",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "Name",
                            "type": "string"
                        },
                        {
                            "name": "Value",
                            "type": "object"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Value\":{\"type\":\"object\",\"properties\":{}}}}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0aHViLmNvbS9wcm9qZWN0LWZsb2dvL2NvbnRyaWIvYWN0aXZpdHkvbG9nIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvYWN0aXZpdHkvbG9nIn0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvR3JhcGhCdWlsZGVyX1Rvb2xzIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0dyYXBoQnVpbGRlcl9Ub29scyJ9LHsicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL01vZGVsT3BzIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L01vZGVsT3BzIn0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvRjFfRnVuY3Rpb24vZnVuY3Rpb25zL2YxIiwiczNsb2NhdGlvbiI6ImZsb2dvL2YxL2Z1bmN0aW9ucy9mMSJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIADeld1OrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAA3pXdTq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}